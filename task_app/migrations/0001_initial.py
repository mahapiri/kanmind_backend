# Generated by Django 5.2.1 on 2025-05-09 11:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('board_app', '0001_initial'),
        ('user_auth_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='user_auth_app.profile')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['author'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('to-do', 'to-do'), ('in-progress', 'in-progress'), ('review', 'review'), ('done', 'done')], max_length=255)),
                ('priority', models.CharField(choices=[('low', 'low'), ('mediium', 'medium'), ('high', 'high')], max_length=255)),
                ('due_date', models.DateField()),
                ('assignee', models.ManyToManyField(blank=True, related_name='assigned_tasks', to='user_auth_app.profile')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_set', to='board_app.board')),
                ('comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='task_app.comment')),
                ('owner_id', models.ManyToManyField(related_name='own_tasks', to='user_auth_app.profile')),
                ('reviewer', models.ManyToManyField(blank=True, related_name='reviewer_tasks', to='user_auth_app.profile')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['board'],
            },
        ),
    ]
